@page "/venues"
@rendermode InteractiveServer
@attribute [StreamRendering]


@using RSAllies.Contracts

@inject ApiClient ApiClient
@inject NavigationManager NavigationManager

<PageTitle>Venues</PageTitle>

<div class="div-card">
    
    <div class="div-card-part1">
        <p style="font-family: FesterHeavy,serif;font-size: 30px">Test Centers</p>
        <p style="font-family: FesterHeavy,serif; font-size: 30px;">Across All Regions in Tanzania</p>
        <br/>
        <p style="font-family: 'Segoe Print',serif;color:#FF6653;font-weight:600;">Our test centers are equipped with the latest technology and are designed to provide a conducive environment for our candidates to take their exams.</p>
        <br />
        <FluentStack Orientation="Orientation.Horizontal">
            <FluentAnchor Href="venues/add-venue">Add Venue</FluentAnchor>
            <FluentAnchor Href="">Sessions</FluentAnchor>
        </FluentStack>
    </div>

    <img src="/Images/centre.jpg" style="border-radius:8px;" alt=""/>

</div>

<div class="second-card">
    <FluentCard Width="80%" Height="100px">
        <h4>Region</h4>
        <FluentCombobox Items="@_stringOptions"
                        OptionText="@(i => i.Text)"
                        OptionValue="@(i => i.Value)"
                        OptionSelected="@(i => i.Selected)"
                        @bind-SelectedOption="@_selectedStringOption"
                        @bind-Value="@_stringValue" />
    </FluentCard>
</div>

<FluentStack Orientation="Orientation.Vertical" VerticalGap="10" Style="margin-top:20px">
    @if(_venues?.Count > 0)
    {
        foreach (var venue in _venues)
        {
            <FluentCard>
                <div style="display:flex;flex-direction:row;gap:100px;align-items:center">

                    <img src="favicon.ico" width="75" height="75" alt=""/>

                    <div @onclick="@(() => NavigationManager.NavigateTo($"/venues/venue/{venue.Id}?name={venue.Name}&address={venue.Address}&capacity={venue.Capacity}"))">
                        <p>@venue.Name</p>
                        <p>@venue.Address</p>
                        <p>@venue.Capacity</p>
                    </div>


                </div>

            </FluentCard>
        }
    }
    else
    {
        <FluentProgressRing></FluentProgressRing>
    }
</FluentStack>


@code {

    string? _stringValue;
    private Option<string> _selectedStringOption = default!;

    readonly List<Option<string>> _stringOptions =
    [
        new Option<string> { Value = "1", Text = "One" },
        new Option<string> { Value = "2", Text = "Two", Selected = true },
        new Option<string> { Value = "3", Text = "Three" }
    ];

    List<VenueDto>? _venues = [];

    protected override async Task OnInitializedAsync()
    {
        var venues = await ApiClient.GetVenuesAsync();
        _venues = venues?.Value;
    }

}
